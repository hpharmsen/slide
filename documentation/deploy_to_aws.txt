# Via: https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-awscli.html

# Create a trust-policy.json file (Version niet veranderen):
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Principal": {
        "Service": "lambda.amazonaws.com"
      },
      "Action": "sts:AssumeRole"
    }
  ]
}

# Create an Access Key at: https://console.aws.amazon.com/iam/home?region=us-east-1#/security_credentials

aws configure
# Vul de keys in zet Default region name op us-east-1 en Default output format op json

aws iam create-role --role-name lambda-ex --assume-role-policy-document file://trust-policy.json
aws iam attach-role-policy --role-name lambda-ex --policy-arn arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

# Create a deployment package.
zip function.zip slide.py

# Find out your AWS acount Id to use in the next call
aws sts get-caller-identity

# Create the function
aws lambda create-function --function-name slide_test \
--zip-file fileb://function.zip --handler lambda_function.lambda_handler --runtime python3.8 \
--role arn:aws:iam::822855244065:role/lambda-ex

# In aws console set Environment variables (if needed) and Timeout

# Update the function
aws lambda update-function-code --function-name slide_test --zip-file fileb://function.zip

# Invoke the function
aws lambda invoke --function-name slide_test out --log-type Tail

# You can use the base64 utility to decode the logs.
aws lambda invoke --function-name slide_test out --log-type Tail --query 'LogResult' --output text |  base64 -d